/*
Sesame Public API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 3.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AbsenceCalendarsApi,
  AbsenceDayOffApi,
  AbsenceDayOffRequestsApi,
  AbsenceTypesApi,
  AgreementsApi,
  CheckTypesApi,
  CheckValidationApi,
  CompanyApi,
  ContractsApi,
  CustomFieldsApi,
  CustomersApi,
  DepartmentsApi,
  DocumentsApi,
  EmployeeAgreementsApi,
  EmployeeAssignationsRolesApi,
  EmployeeDepartmentAssignationsApi,
  EmployeeManagersApi,
  EmployeeOfficeAssignationsApi,
  EmployeeScheduleTemplatesApi,
  EmployeesApi,
  HolidayCalendarsApi,
  HolidaysApi,
  OfficesApi,
  ProjectsApi,
  RecruitmentApi,
  RolesApi,
  SalariesApi,
  ScheduleTemplatesApi,
  SecurityApi,
  StatisticsApi,
  TimeEntriesApi,
  VacationCalendarsApi,
  VacationConfigurationsApi,
  VacationDayOffApi,
  VacationDayOffRequestsApi,
  WorkBreaksApi,
  WorkEntriesApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { SesameHrCustom } from "./client-custom";

export class SesameHr extends SesameHrCustom {
  readonly absenceCalendars: AbsenceCalendarsApi;
  readonly absenceDayOff: AbsenceDayOffApi;
  readonly absenceDayOffRequests: AbsenceDayOffRequestsApi;
  readonly absenceTypes: AbsenceTypesApi;
  readonly agreements: AgreementsApi;
  readonly checkTypes: CheckTypesApi;
  readonly checkValidation: CheckValidationApi;
  readonly company: CompanyApi;
  readonly contracts: ContractsApi;
  readonly customFields: CustomFieldsApi;
  readonly customers: CustomersApi;
  readonly departments: DepartmentsApi;
  readonly documents: DocumentsApi;
  readonly employeeAgreements: EmployeeAgreementsApi;
  readonly employeeAssignationsRoles: EmployeeAssignationsRolesApi;
  readonly employeeDepartmentAssignations: EmployeeDepartmentAssignationsApi;
  readonly employeeManagers: EmployeeManagersApi;
  readonly employeeOfficeAssignations: EmployeeOfficeAssignationsApi;
  readonly employeeScheduleTemplates: EmployeeScheduleTemplatesApi;
  readonly employees: EmployeesApi;
  readonly holidayCalendars: HolidayCalendarsApi;
  readonly holidays: HolidaysApi;
  readonly offices: OfficesApi;
  readonly projects: ProjectsApi;
  readonly recruitment: RecruitmentApi;
  readonly roles: RolesApi;
  readonly salaries: SalariesApi;
  readonly scheduleTemplates: ScheduleTemplatesApi;
  readonly security: SecurityApi;
  readonly statistics: StatisticsApi;
  readonly timeEntries: TimeEntriesApi;
  readonly vacationCalendars: VacationCalendarsApi;
  readonly vacationConfigurations: VacationConfigurationsApi;
  readonly vacationDayOff: VacationDayOffApi;
  readonly vacationDayOffRequests: VacationDayOffRequestsApi;
  readonly workBreaks: WorkBreaksApi;
  readonly workEntries: WorkEntriesApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.absenceCalendars = new AbsenceCalendarsApi(configuration);
    this.absenceDayOff = new AbsenceDayOffApi(configuration);
    this.absenceDayOffRequests = new AbsenceDayOffRequestsApi(configuration);
    this.absenceTypes = new AbsenceTypesApi(configuration);
    this.agreements = new AgreementsApi(configuration);
    this.checkTypes = new CheckTypesApi(configuration);
    this.checkValidation = new CheckValidationApi(configuration);
    this.company = new CompanyApi(configuration);
    this.contracts = new ContractsApi(configuration);
    this.customFields = new CustomFieldsApi(configuration);
    this.customers = new CustomersApi(configuration);
    this.departments = new DepartmentsApi(configuration);
    this.documents = new DocumentsApi(configuration);
    this.employeeAgreements = new EmployeeAgreementsApi(configuration);
    this.employeeAssignationsRoles = new EmployeeAssignationsRolesApi(configuration);
    this.employeeDepartmentAssignations = new EmployeeDepartmentAssignationsApi(configuration);
    this.employeeManagers = new EmployeeManagersApi(configuration);
    this.employeeOfficeAssignations = new EmployeeOfficeAssignationsApi(configuration);
    this.employeeScheduleTemplates = new EmployeeScheduleTemplatesApi(configuration);
    this.employees = new EmployeesApi(configuration);
    this.holidayCalendars = new HolidayCalendarsApi(configuration);
    this.holidays = new HolidaysApi(configuration);
    this.offices = new OfficesApi(configuration);
    this.projects = new ProjectsApi(configuration);
    this.recruitment = new RecruitmentApi(configuration);
    this.roles = new RolesApi(configuration);
    this.salaries = new SalariesApi(configuration);
    this.scheduleTemplates = new ScheduleTemplatesApi(configuration);
    this.security = new SecurityApi(configuration);
    this.statistics = new StatisticsApi(configuration);
    this.timeEntries = new TimeEntriesApi(configuration);
    this.vacationCalendars = new VacationCalendarsApi(configuration);
    this.vacationConfigurations = new VacationConfigurationsApi(configuration);
    this.vacationDayOff = new VacationDayOffApi(configuration);
    this.vacationDayOffRequests = new VacationDayOffRequestsApi(configuration);
    this.workBreaks = new WorkBreaksApi(configuration);
    this.workEntries = new WorkEntriesApi(configuration);
  }

}
